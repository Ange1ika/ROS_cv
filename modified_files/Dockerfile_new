FROM nvidia/cuda:11.7.1-devel-ubuntu20.04

# Отключение интерактивного режима установки
ARG DEBIAN_FRONTEND=noninteractive
ENV DEBIAN_FRONTEND=$DEBIAN_FRONTEND

# Задание временной зоны
ENV TZ=Europe/Moscow

# Основные зависимости и утилиты
RUN apt-get update && apt-get install -y \
    lsb-core \
    curl \
    gnupg2 \
    software-properties-common \
    tzdata \
    mesa-utils \
    libgl1-mesa-glx \
    python-dev \
    build-essential \
    wget \
    git

# Установка ROS2 Foxy и ROS1 Noetic
RUN curl -sSL https://raw.githubusercontent.com/ros/rosdistro/master/ros.asc | apt-key add - && \
    sh -c 'echo "deb http://packages.ros.org/ros2/ubuntu $(lsb_release -cs) main" > /etc/apt/sources.list.d/ros2-latest.list' && \
    sh -c 'echo "deb http://packages.ros.org/ros/ubuntu $(lsb_release -sc) main" > /etc/apt/sources.list.d/ros-latest.list' && \
    apt-get update && apt-get install -y \
    ros-foxy-desktop \
    ros-noetic-desktop-full \
    python3-colcon-common-extensions

# Настройка окружения ROS
RUN echo "source /opt/ros/noetic/setup.bash" >> ~/.bashrc && \
    echo "source /opt/ros/foxy/setup.bash" >> ~/.bashrc

# Установка Miniconda
ENV CONDA_DIR /opt/conda
ENV PATH=$CONDA_DIR/bin:$PATH
ENV PIP_ROOT_USER_ACTION=ignore
RUN wget --quiet https://repo.anaconda.com/miniconda/Miniconda3-latest-Linux-x86_64.sh -O ~/miniconda.sh && \
    /bin/bash ~/miniconda.sh -b -p /opt/conda && \
    rm ~/miniconda.sh && \
    conda install python=3.8.10

# Установка PyTorch и других зависимостей
RUN pip install torch==2.0.0+cu117 torchvision==0.15.1+cu117 --index-url https://download.pytorch.org/whl/cu117 && \
    pip install Cython open3d nano git+https://github.com/openai/CLIP.git

# Установка зависимостей из requirements.txt
ADD requirements.txt ./
RUN pip install -r requirements.txt

# Установка специфических зависимостей проекта
RUN python -m pip install 'git+https://github.com/MaureenZOU/detectron2-xyz.git' && \
    pip install git+https://github.com/cocodataset/panopticapi.git && \
    pip install albumentations Pillow==9.5.0 wandb open_clip_torch

# Установка rospkg через conda
RUN conda install -c conda-forge rospkg

# Установка ROS1 Bridge
RUN apt-get update && apt-get install -y \
    ros-foxy-ros1-bridge

# Сборка и настройка ROS пакетов
# git clone https://github.com/andrey1908/kas_utils.git
ADD kas_utils/ /sources/kas_utils/

# git clone https://github.com/andrey1908/BoT-SORT
ADD BoT-SORT/ /sources/BoT-SORT/ 

# ADD rviz_conf.rviz /sources/rviz_conf.rviz
ADD rviz_conf_full.rviz /sources/rviz_conf.rviz

WORKDIR /sources/kas_utils/python
RUN pip install .

WORKDIR /sources/BoT-SORT/ 
ADD modified_files/bot_sort.py /sources/BoT-SORT/tracker/bot_sort.py
ADD modified_files/fast_reid_interfece.py /sources/BoT-SORT/fast_reid/fast_reid_interfece.py
RUN pip install .

RUN pip install open3d 
RUN pip install numpy==1.23.5

ADD communication_msgs/ /sources/catkin_ws/src/communication_msg
ADD openseed_src/openseed/body/encoder/ops/ /sources/catkin_ws/src/openseed_src/openseed/body/encoder/ops

RUN ["/bin/bash", "-c", "source /opt/ros/noetic/setup.bash && \
    cd /sources/catkin_ws/src/openseed_src/openseed/body/encoder/ops && \
    ./make.sh"]
   

#git clone https://github.com/andrey1908/husky_tidy_bot_cv
ADD husky_tidy_bot_cv/ /sources/catkin_ws/src/husky_tidy_bot_cv/
ADD modified_files/bot_sort_node.py /sources/catkin_ws/src/husky_tidy_bot_cv/scripts/bot_sort_node.py


RUN ["/bin/bash", "-c", "source /opt/ros/noetic/setup.bash && \
    cd /sources/catkin_ws/ && \
   /opt/ros/noetic/bin/catkin_make --cmake-args \
        -DCMAKE_BUILD_TYPE=Release \
        -DPYTHON_EXECUTABLE=/usr/bin/python3.8 \
        -DPYTHON_INCLUDE_DIR=/usr/include/python3.8m \
        -DPYTHON_LIBRARY=/usr/lib/x86_64-linux-gnu/libpython3.8m.so"]

ADD openseed_src/ /sources/catkin_ws/src/openseed_src


RUN apt-get update && apt-get install -y git

# Clone the ultralytics repository
#RUN pip install ultralytics==8.0.135
#RUN git clone --branch v8.0.155 https://github.com/ultralytics/ultralytics.git /sources/catkin_ws/src/ultralytics

RUN git clone https://github.com/andrey1908/ultralytics.git /sources/catkin_ws/src/ultralytics
#RUN git clone https://github.com/ultralytics/ultralytics.git /sources/catkin_ws/src/ultralytics

# Install the ultralytics package
RUN pip install -e /sources/catkin_ws/src/ultralytics

COPY entrypoint.sh /entrypoint.sh
RUN chmod +x /entrypoint.sh
CMD ["/bin/bash", "/entrypoint.sh"]

